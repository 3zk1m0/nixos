# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "usbhid" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.extraModprobeConfig = ''
    options iwlwifi power_save=N
    options iwlmvm power_scheme=1
  '';

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/67e1bd51-063e-4d6e-a5cb-b00415dc00db";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-2c87866a-ba11-4d1e-a585-423f4fd17022".device = "/dev/disk/by-uuid/2c87866a-ba11-4d1e-a585-423f4fd17022";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/0CAD-8827";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };


  swapDevices = [{
    device = "/swapfile";
    size = 64 * 1024;
  }];
  boot.resumeDevice = "/dev/mapper/luks-2c87866a-ba11-4d1e-a585-423f4fd17022";
  boot.kernelParams = [
    "resume_offset=75196416"
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20f0u1.useDHCP = lib.mkDefault true;
  networking.nameservers = [ "1.1.1.1" "9.9.9.9" ];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
